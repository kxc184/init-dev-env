(self.webpackChunkcollection_runner=self.webpackChunkcollection_runner||[]).push([[5764,7560,7397,4492,25,7301],{7560:(e,t,s)=>{"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e},r.apply(this,arguments)}s.d(t,{Z:()=>r})},98283:(e,t,s)=>{"use strict";function r(e,t){if(null==e)return{};var s,r,a={},n=Object.keys(e);for(r=0;r<n.length;r++)s=n[r],t.indexOf(s)>=0||(a[s]=e[s]);return a}s.d(t,{Z:()=>r})},84492:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var r=s(7560),a=s(162),n=s.n(a);const o=(0,r.Z)({},n(),{DISABLE_ANALYTICS:!1,ANALYTICS_URL:"https://events.getpostman.com/events",IDENTITY_URL:"https://identity.getpostman.com",ARTEMIS_URL:"https://go.postman.co",HTTPS_GATEWAY_PRIVATE_URL:"https://bifrost-extension-https-global.gw.postman.com",WEBSOCKET_GATEWAY_URL:"wss://bifrost-extension-global.gw.postman.com",WEB_URL:"https://www.getpostman.com",DASHBOARD_URL:"https://go.postman.co",EXPLORE_URL:"https://www.postman.com",SENTRY_DSN:"https://0fd0f21b182549f18b0e01ce62f8adb0@o1224273.ingest.sentry.io/4505072910139392",OAUTH2_CALLBACK_URL:"https://oauth.pstmn.io/v1/vscode-callback",IMAGE_UPLOAD_URL:"https://content.pstmn.io",IDENTITY_SERVICE_URL:"https://iapub.postman.co",RUNTIME_ASSET_URL:"https://runtime-assets.pstmn.io"})},85764:(e,t,s)=>{"use strict";s.r(t),s.d(t,{PUBLIC_PROFILE_QUERY_PREFIX:()=>l,TEAM_DETAILS_QUERY_PREFIX:()=>p,USER_DETAILS_QUERY_PREFIX:()=>u,getPublicProfile:()=>m,getTeamInfo:()=>I,getTeamsByUserId:()=>T,getUserInfo:()=>c,isTeamUser:()=>g,usePublicProfile:()=>E,useTeamInfo:()=>_,useTeamsByUserId:()=>R,useUserInfo:()=>d});var r=s(69461),a=s(9907),n=s(98283),o=s(34925);const i=["result"],u="user-details",p="team-details",l="public-profile",c=({userId:e=(0,a.getUserId)()}={})=>({queryKey:[u,e],queryFn:({signal:t})=>(async({userId:e=(0,a.getUserId)(),signal:t}={})=>o.postmanGateway.get({path:`/api/users/${e}`,service:"god",signal:t,query:{app_version:window.APP_VERSION,app_target:"artemis"}}).then((e=>{const{result:t}=e,s=(0,n.Z)(e,i);return"success"===t?s:{}})))({signal:t,userId:e}),useErrorBoundary:!1}),d=({userId:e=(0,a.getUserId)()}={})=>(0,r.useDataFetch)(c({userId:e})),g=(e=(0,a.getTeamId)())=>void 0!==e&&""!==e&&"0"!==e,I=({teamId:e=(0,a.getTeamId)()}={})=>({queryKey:[p,e],queryFn:({signal:t})=>(async({teamId:e=(0,a.getTeamId)(),signal:t}={})=>g(e)?o.postmanGateway.get({path:`/api/organizations/${e}`,service:"god",signal:t,query:{populate_groups:!0,freecollab:!0,extras:!1,billing:!1,app_version:window.APP_VERSION}}).then((e=>{var t;return"success"===e.result?null==(t=e.data)?void 0:t.organization:{}})).catch((e=>({}))):{})({signal:t,teamId:e}),useErrorBoundary:!0}),_=({teamId:e=(0,a.getTeamId)()}={})=>(0,r.useDataFetch)(I({teamId:e}));var y=s(84492);const m=({type:e,userIds:t,populate:s,signal:r})=>({queryKey:[l,t.toString()],queryFn:()=>(async({type:e,userIds:t,populate:s,signal:r})=>{const a={type:e,ids:t};s&&(a.populate=s);const n=await o.postmanGateway.post({url:`${y.Z.HTTPS_GATEWAY_PRIVATE_URL}/ws/proxy`,path:"/api/public_profile",service:"ums",method:"post",data:{body:a},signal:r});if(!n)throw new Error("Received invalid users");return n.users})({type:e,userIds:t,populate:s,signal:r}),useErrorBoundary:!1}),E=e=>(0,r.useDataFetch)(m(e)),T=({userId:e=(0,a.getUserId)()}={})=>({queryKey:[p,e],queryFn:({signal:t})=>(async({userId:e=(0,a.getUserId)(),signal:t})=>{var s,r;return await o.postmanGateway.get({url:`${y.Z.HTTPS_GATEWAY_PRIVATE_URL}/ws/proxy`,path:`/api/users/${e}/organizations`,service:"god",signal:t,query:{user_id:e,populate_groups:!0,freecollab:!0,extras:!1,billing:!1,app_version:null!=(s=null==(r=window)?void 0:r.APP_VERSION)?s:""}})})({signal:t,userId:e}),useErrorBoundary:!1}),R=({userId:e=(0,a.getUserId)()}={})=>(0,r.useDataFetch)(T({userId:e}))},162:()=>{}}]);
//# sourceMappingURL=5764.f9d0d74be0d2fd75.js.map